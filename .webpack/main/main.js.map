{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNsD;AACnB;AACP;AAG5B,IAAII,mBAAO,CAAC,4DAA2B,CAAC,EAAE;IACxCJ,yCAAG,CAACK,IAAI,EAAE;AACZ;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAYA;IAEhB,IAAMC,UAAU,GAAG,IAAIN,mDAAa,CAAC;QACnCO,MAAM,EAAE,GAAG;QACXC,KAAK,EAAE,GAAG;QACVC,cAAc,EAAE;YACdC,OAAO,EAAER,sCAAS,CAACU,SAAS,EAAE,YAAY,CAAC;YAC3CC,gBAAgB,EAAE,IAAI;YACtBC,eAAe,EAAE;SACnB;KACD,CAAC;IAGF,IAAIb,wDAAK,EAAE;QACTK,UAAU,CAACS,OAAO,CAAC,uBAAuB,CAAC;QAE3CT,UAAU,CAACU,WAAW,CAACC,YAAY,EAAE;IACvC,CAAC;SAAM;QACLX,UAAU,CAACY,QAAQ,CAAChB,sCAAS,CAACU,SAAS,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;IACxE;AACF,CAAC;AAKDb,yCAAG,CAACoB,SAAS,EAAE,CAACC,IAAI,CAAC;IACnBf,YAAY,EAAE;IAEdN,yCAAG,CAACsB,EAAE,CAAC,UAAU,EAAE;QAGjB,IAAIrB,mDAAa,CAACsB,aAAa,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;YAC9ClB,YAAY,EAAE;QAChB;IACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAGFN,yCAAG,CAACsB,EAAE,CAAC,mBAAmB,EAAE;IAC1B,IAAIG,OAAO,CAACC,QAAQ,KAAK,QAAQ,EAAE;QACjC1B,yCAAG,CAACK,IAAI,EAAE;IACZ;AACF,CAAC,CAAC;AAGFoB,OAAO,CAACH,EAAE,CAAC,mBAAmB,EAAE,UAACK,KAAY;IAC3CC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;AAC7C,CAAC,CAAC;AAEFF,OAAO,CAACH,EAAE,CAAC,oBAAoB,EAAE,UAACO,MAAe,EAAEC,OAAyB;IAC1EF,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEG,OAAO,EAAE,SAAS,EAAED,MAAM,CAAC;AACtE,CAAC,CAAC","sources":["webpack://freedom-pos/external commonjs2 \"electron\"","webpack://freedom-pos/external commonjs2 \"electron-is-dev\"","webpack://freedom-pos/external commonjs2 \"electron-squirrel-startup\"","webpack://freedom-pos/external node-commonjs \"path\"","webpack://freedom-pos/webpack/bootstrap","webpack://freedom-pos/webpack/runtime/compat get default export","webpack://freedom-pos/webpack/runtime/define property getters","webpack://freedom-pos/webpack/runtime/hasOwnProperty shorthand","webpack://freedom-pos/webpack/runtime/make namespace object","webpack://freedom-pos/./src/index.ts"],"sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"electron-is-dev\");","module.exports = require(\"electron-squirrel-startup\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { app, BrowserWindow, ipcMain } from 'electron';\nimport isDev from 'electron-is-dev';\nimport * as path from 'path';\n\n// Handle creating/removing shortcuts on Windows when installing/uninstalling.\nif (require('electron-squirrel-startup')) {\n  app.quit();\n}\n\nconst createWindow = (): void => {\n  // Create the browser window.\n  const mainWindow = new BrowserWindow({\n    height: 600,\n    width: 800,\n    webPreferences: {\n      preload: path.join(__dirname, 'preload.js'),\n      contextIsolation: true,\n      nodeIntegration: false,\n    },\n  });\n\n  // Load the app\n  if (isDev) {\n    mainWindow.loadURL('http://localhost:3000');\n    // Open the DevTools in development mode.\n    mainWindow.webContents.openDevTools();\n  } else {\n    mainWindow.loadFile(path.join(__dirname, '../renderer', 'index.html'));\n  }\n};\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.whenReady().then(() => {\n  createWindow();\n\n  app.on('activate', () => {\n    // On macOS it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (BrowserWindow.getAllWindows().length === 0) {\n      createWindow();\n    }\n  });\n});\n\n// Quit when all windows are closed, except on macOS.\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\n// Error handling\nprocess.on('uncaughtException', (error: Error) => {\n  console.error('Uncaught exception:', error);\n});\n\nprocess.on('unhandledRejection', (reason: unknown, promise: Promise<unknown>) => {\n  console.error('Unhandled rejection at:', promise, 'reason:', reason);\n});\n"],"names":["app","BrowserWindow","isDev","path","require","quit","createWindow","mainWindow","height","width","webPreferences","preload","join","__dirname","contextIsolation","nodeIntegration","loadURL","webContents","openDevTools","loadFile","whenReady","then","on","getAllWindows","length","process","platform","error","console","reason","promise"],"sourceRoot":""}